import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import javax.swing.JPanel;

public class PongPanel extends JPanel implements MouseMotionListener, KeyListener{

	private int x;
	private int y;
	private double xSpeed;
	private double ySpeed;
	private int xPaddle;
	private int yPaddle;
	private int score;
	private int level;
	private boolean gameOver;

	public PongPanel() {
		x = 500;
		y = 500;
		xPaddle = 500;
		yPaddle = 800;
		xSpeed = Math.random() * 2 + 1;
		ySpeed = Math.random() * 5 + 5;
		Color teal = new Color(0, 175, 205);
		setBackground(teal);
		score = 0;
		level = 1;
	}

	@Override
	protected void paintComponent(Graphics g) {
		// TODO Auto-generated method stub
		super.paintComponent(g);
	    g.setFont(new Font("Courrier", Font.PLAIN, 30));
		g.drawString("Score: " + score, 50, 50);
		g.drawString("Level:  " + level, 50, 80);
		g.setColor(Color.GREEN);
		g.fillOval(x, y, 20, 20);
		g.setColor(Color.YELLOW);
		g.fillRect(xPaddle, yPaddle, 100, 20);
		if(gameOver){
			g.setColor(Color.RED);
			g.fillRect(250, 250, 500, 500);
			g.setColor(Color.WHITE);
			g.fillRect(275, 275, 450, 450);
			g.setColor(Color.BLACK);
			g.drawString("GAME OVER", 400, 350);
			g.setFont(new Font("TimesRoman", Font.PLAIN, 15));
			g.drawString("Level: " + level, 300, 400);
			g.drawString("Total Bounces: " + score * 10 + score, 300, 425);
			g.drawString("Final Ball Speed: " + Math.sqrt(Math.pow(xSpeed, 2) + Math.pow(ySpeed, 2)), 300, 450);

		}

	}

	public void moveBall() {
		x += xSpeed;
		y += ySpeed;
		if ((x >= xPaddle) && (x <= xPaddle + 100) && (yPaddle - (y - ySpeed)) * (yPaddle - y) <= 0) {
			ySpeed = -ySpeed;
			score++;
			y = yPaddle - 2;
		}
		if (x > getWidth() - 20 || x < 0) {
			xSpeed = -xSpeed;
		}
		if (y < 0) {
			ySpeed = -ySpeed;
		}
		if(y > getHeight() - 20){
			gameOver = true;
		}
		if (score > 100) {
			level++;
			score = 0;
			xSpeed *= 1.5;
			ySpeed *= 1.5;
		}
		repaint();
	}

	@Override
	public void mouseDragged(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	public void mouseMoved(MouseEvent e) {
		xPaddle = e.getX();
	}

	@Override
	public void keyPressed(KeyEvent e) {
		System.out.println(e.getKeyCode());
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}
